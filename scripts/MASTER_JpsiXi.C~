#include "TROOT.h"
#include "TSystem.h"
#include "TString.h"
#include "TStopwatch.h"
#include <iostream>

using namespace std;

void MASTER_JpsiXi()
{
  TStopwatch sw;
  sw.Start();

  gSystem->Exec("date");

  Bool_t testing         = true; // when true, analysis will only run over a subset of data
  Bool_t loose           = true;  // when true, analysis will run over data/MC from "loose" stripping line. Only LL
  Int_t run              = 1;     // Run 1 or Run 2?
  Bool_t isData          = true;  // Data or MC?
  Bool_t logFlag         = true;  // set to false only while testing.

  //  Data- Run 1
  //  Trigger Cut
  // gSystem->cd("/data1/avenkate/JpsiLambda_RESTART/scripts");
  // gROOT->ProcessLine(".L Trigger_JpsiXi.C+");
  // gROOT->ProcessLine(Form("Trigger_JpsiXi(%d, 2011, %d, %d, %d, %d)",
  //                         run, isData, testing, loose, logFlag));
  // gROOT->Reset();

  //Sanity Cuts
  gSystem->cd("/data1/avenkate/JpsiLambda_RESTART/scripts");
  gROOT->ProcessLine(".L Cuts_JpsiXi.C+");
  gROOT->ProcessLine(Form("Cuts_JpsiXi(%d, 2011, %d, %d)", run, isData, logFlag));
  gROOT->Reset();
  
  sw.Stop();
  cout << "==> MASTER_JpsiXi is done! Huzzah!: "; sw.Print();
}
