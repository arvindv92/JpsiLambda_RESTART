/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooOneSidedProfileLL.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooOneSidedProfileLL); 

 RooOneSidedProfileLL::RooOneSidedProfileLL(const char *name, const char *title, 
                        RooAbsReal& _profileLL) :
   RooAbsReal(name,title), 
   profileLL("profileLL","profileLL",this,_profileLL)
 { 
 } 


 RooOneSidedProfileLL::RooOneSidedProfileLL(const RooOneSidedProfileLL& other, const char* name) :  
   RooAbsReal(other,name), 
   profileLL("profileLL",this,other.profileLL)
 { 
 } 



 Double_t RooOneSidedProfileLL::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   Double_t pllVal = profileLL; //need to evaluate profileLL first

   const RooProfileLL* ll = dynamic_cast<const RooProfileLL*>(profileLL.absArg());
   if(ll) {
     const RooArgSet& s = ll->bestFitObs();
     const char* poiName = s.first()->GetName();
     Double_t bestFit = s.getRealValue(poiName); //assume first is the poi
     if(bestFit > ll->getVariables()->getRealValue(poiName)) return 0;
   }
   return pllVal; 
 } 



